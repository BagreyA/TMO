% Определение параметров
L = 15; % Число узлов
epsilon = 1e-5; % Точность
max_iterations = 100; % Максимальное количество итераций

% Пример матрицы переходов
P = [
    0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0;
    1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0;
    1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0;
    1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1;
    0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1;
    0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0;
    0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0;
    1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
];

% Нормализация матрицы P
for i = 1:L
    if sum(P(i, :)) ~= 0  % Проверка на нулевую строку
        P(i, :) = P(i, :) / sum(P(i, :));
    end
end

% Инициализация матриц и векторов
P_m = zeros(L, L, max_iterations); % P(m) матрица
f_m = zeros(max_iterations, L); % Вероятности первого перехода
M_m = inf(L, L); % Длины кратчайших путей
expected_lengths = zeros(L, L); % Математическое ожидание длины пути
variances = zeros(L, L); % Дисперсия длины пути

% Вычисления
for m = 1:max_iterations
    % Вычисляем P(m)
    if m == 1
        P_m(:, :, m) = P; % Для первого шага
    else
        P_m(:, :, m) = P_m(:, :, m-1) * P; % Умножение матриц для следующего шага
    end
    
    for i = 1:L
        for j = 1:L
            if m == 1
                f_m(m, j) = P(i, j); % Для первого шага
            else
                f_m(m, j) = f_m(m-1, j) * (1 - P_m(i, j, m-1)) + P_m(i, j, m);
            end
            
            % Длина кратчайшего пути
            M_m(i, j) = min(M_m(i, j), m * f_m(m, j));
            
            % Математическое ожидание
            expected_lengths(i, j) = expected_lengths(i, j) + m * f_m(m, j);
        end
    end
end

% Дисперсия
for i = 1:L
    for j = 1:L
        variances(i, j) = sum((1:max_iterations).^2 .* f_m(:, j)) - expected_lengths(i, j)^2;
    end
end

% Вывод результатов
disp('Длины кратчайших путей (M):');
disp(M_m);

disp('Математическое ожидание длины пути (E):');
disp(expected_lengths);

disp('Дисперсия длины пути (D):');
disp(variances);

% Графическое отображение результатов
figure;
subplot(2, 2, 1);
imagesc(M_m);
colorbar;
title('Длины кратчайших путей');
xlabel('Узел j');
ylabel('Узел i');

subplot(2, 2, 2);
imagesc(expected_lengths);
colorbar;
title('Математическое ожидание длины пути');
xlabel('Узел j');
ylabel('Узел i');

subplot(2, 2, 3);
imagesc(variances);
colorbar;
title('Дисперсия длины пути');
xlabel('Узел j');
ylabel('Узел i');
